<application>
  <component name="AppStorage">
    <histories>
      <item value="conclude" />
      <item value="conclude Count" />
      <item value="declarations" />
      <item value="interrupt" />
      <item value="Tests whether the current thread has been interrupted. The * &lt;i&gt;interrupted status&lt;/i&gt; of the thread is cleared by this method. In * other words, if this method were to be called twice in succession, the * second call would return false (unless the current thread were * interrupted again, after the first call had cleared its interrupted * status and before the second call had examined it)." />
      <item value="retry Attempts" />
      <item value="Attempt" />
      <item value="identity" />
      <item value="and vice versa" />
      <item value="For instance" />
      <item value="compatible" />
      <item value="Indicate whether this {@code MediaType} is compatible with the given media type" />
      <item value="Ambiguous constructor argument types - did you specify the correct bean references as constructor arguments" />
      <item value="Set up event handlers to handle events from the ring buffer" />
      <item value="Histogram for tracking the frequency of observations of values below interval upper bounds" />
      <item value="Histogram" />
      <item value="The Brutal Truth" />
      <item value="Maxims" />
      <item value="Maxim" />
      <item value="The Four Maxims of Java Concurrency" />
      <item value="“But I don’t want to go among mad people,” Alice remarked. “Oh, you can’t help that,” said the Cat. “We’re all mad here. I’m mad. You’re mad.” “How do you know I’m mad?” said Alice. “You must be,” said the Cat, “or you wouldn’t have come here.” — Alice’s Adventures in Wonderland, Chapter 6." />
      <item value="the bound (exclusive) of each random value" />
      <item value="the origin (inclusive) of each random value" />
      <item value="Indicates the &lt;em&gt;containing annotation type&lt;/em&gt; for the * repeatable annotation type." />
      <item value="the initial seed" />
      <item value="Populate the bean instance in the given BeanWrapper with the property values * from the bean definition." />
      <item value="Give BeanPostProcessors a chance to return a proxy instead of the target bean instance." />
      <item value="Convenience extension of {@link DefaultListableBeanFactory} that reads bean definitions" />
      <item value="the primary sources to load" />
      <item value="that only matches when the specified classes are on the classpath." />
      <item value="Nested configuration if Jetty is being used." />
      <item value="Return whether the local bean factory contains a bean of the given name," />
      <item value="eturn whether the local bean factory contains a bean of the given name" />
      <item value="But the 'name' property of the queue remains as is" />
      <item value="generated" />
      <item value="Declare the given queue" />
      <item value="转换" />
      <item value="transfer only max. 100000 timeouts per tick to prevent a thread to stale the workerThread when it just adds new timeouts in a loop." />
      <item value="Add the timeout to the timeout queue which will be processed on the next tick.During processing all the queued HashedWheelTimeouts will be added to the correct HashedWheelBucket." />
      <item value="unprocessed Timeouts" />
      <item value="overflow" />
      <item value="Normalize ticksPerWheel to power of two and initialize the wheel" />
      <item value="max Pending Timeouts" />
      <item value="The maximum number of pending timeouts after which call to {@code newTimeout} will result in {@link java.util.concurrent.RejectedExecutionException} being thrown" />
      <item value="the time unit of the" />
      <item value="the duration between tick" />
      <item value="default tick duration, and default number of ticks per wheel." />
      <item value="Duration" />
      <item value="Tracker" />
      <item value="Resource Leak Tracker" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="69" />
        <entry key="ENGLISH" value="70" />
        <entry key="ROMANIAN" value="1" />
      </map>
    </option>
  </component>
</application>